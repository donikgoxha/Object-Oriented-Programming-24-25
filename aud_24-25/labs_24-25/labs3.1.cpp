/*
1) Да се дефинира класа MountainTrail за која се чуваат следните податоци:
    name - име на патеката, низа од карактери
    length - должина на патеката во километри, цел број
    slope - наклон на патеката изразен во проценти, double
За класата да се дефинира default конструктор, конструктор со аргументи и copy конструктор.
За класата да се дефинира метод double difficulty() кој ја пресметува тежината на патеката по следната
формула: должина * наклон / 100. Да се дефинира и метод void display() кој ги печати податоците за патеката
во следниот формат: [име] [должина] [наклон].
Потоа да се дефинира класа Mountain за која се чува:
    name - име на планината, низа од карактери
    trails - низа од 5 патеки кои се наоѓаат на планината
    peak_elevation - надморска височина на врвот, цел број
    num_mountains - бр. на планини за кои водиме сметка во програмата (вредноста на ова поле треба да
биде иста во сите објекти, треба да има и get метод)
За класата да се дефинира  default конструктор, конструктор со аргументи, како и деструктор. Потребно е
секој од овие методи да го ажурира вкупниот број на планини.
Во класата да се дефинира метод display() кој ќе печати податоци за планината во
следниот формат: [име]: [н.в. на врвот]
Надвор од класата да се дефинира метод void sortMountainsByPeakElevation(Mountain mountains[], int n)
кој прима низа од планини и ги печати во опаѓачки редослед според надморската висина на нивниот врв.
Овој метод мора да пристапува директно до приватното поле за надморска висина.
Да не се менува main функцијата.
 */
